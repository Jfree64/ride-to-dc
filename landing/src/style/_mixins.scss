@import "./_variables.scss";

// Create a map of all shared variables
// https://sass-lang.com/documentation/values/maps
$sizes: (
  "s1": (
    "mobile": $s1-mobile,
    "desktop": $s1
  ),
  "s2": (
    "mobile": $s2-mobile,
    "desktop": $s2
  ),
  "s3": (
    "mobile": $s3-mobile,
    "desktop": $s3
  ),
  "s4": (
    "mobile": $s4-mobile,
    "desktop": $s4
  ),
  "s5": (
    "mobile": $s5-mobile,
    "desktop": $s5
  ),
  "s6": (
    "mobile": $s6-mobile,
    "desktop": $s6
    ),
  "s7": (
    "mobile": $s7-mobile,
    "desktop": $s7
  ),
  "s8": (
    "mobile": $s8-mobile,
    "desktop": $s8
  ),
  "inherit": inherit
);

@function getSizeAtScale ($size-name, $scale-name) {
  $size-description: map-get($sizes, $size-name);
  @if type-of($size-description) == map {
    @return map-get($size-description, $scale-name);
  } @else {
    @return $size-description;
  }
}

@mixin size($size-name) {
  font-size: getSizeAtScale($size-name, "mobile");
  @media screen and (min-width: $bp-md) {
    font-size: getSizeAtScale($size-name, "desktop");
  };
};

$colors: (
  "white": $white,
  "grey-light": $grey-light,
  "grey-dark": $grey-dark,
  "black": $black,
  "pop": $pop,
  "sec": $sec,
  "inherit": "inherit"
);

@mixin color($color-name) {
  color: map-get($colors, $color-name)
};

$families: (
  "bobby": $bobby,
  "source-sans": $source-sans
);

@mixin family($family-name) {
  font-family: map-get($families, $family-name);
}

$weights: (
  "bold": $bold,
  "normal": $normal,
  "inherit": "inherit"
);

@mixin weight($weight-name) {
  font-weight: map-get($weights, $weight-name)
};

@mixin type-style (
  $size-name,
  $color-name,
  $weight-name,
  $family-name
) {
  @include size($size-name);
  @include color($color-name);
  @include weight($weight-name);
  @include family($family-name);
}

$breakpoints: (
  "sm": $bp-sm,
  "md": $bp-md,
  "lg": $bp-lg,
  "xl": $bp-xl
)